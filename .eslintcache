[{"/home/tailz/rpg-sheet-react/src/index.js":"1","/home/tailz/rpg-sheet-react/src/reportWebVitals.js":"2","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/CharacterSheet.tsx":"3","/home/tailz/rpg-sheet-react/src/rulesets/5e/example/Yevgeni.ts":"4","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetOtherProficiencies.tsx":"5","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetAbilities.tsx":"6","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetHeader.tsx":"7","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetPerception.tsx":"8","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetInspiration.tsx":"9","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetProficiency.tsx":"10","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetSkills.tsx":"11","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetStatuses.tsx":"12","/home/tailz/rpg-sheet-react/src/rulesets/5e/CharacterBio.interface.ts":"13","/home/tailz/rpg-sheet-react/src/rulesets/5e/Character.ts":"14","/home/tailz/rpg-sheet-react/src/rulesets/5e/skills/Skills.ts":"15","/home/tailz/rpg-sheet-react/src/rulesets/5e/race/Human.ts":"16","/home/tailz/rpg-sheet-react/src/rulesets/5e/class/Ranger.ts":"17","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetAbility.tsx":"18","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetSpeed.tsx":"19","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetInitiative.tsx":"20","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetHitDice.tsx":"21","/home/tailz/rpg-sheet-react/src/rulesets/5e/race/Race.interface.ts":"22","/home/tailz/rpg-sheet-react/src/rulesets/5e/Abilities.ts":"23","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetHealth.tsx":"24","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetDeathSaves.tsx":"25","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetArmor.tsx":"26","/home/tailz/rpg-sheet-react/src/rulesets/5e/example/Esh.ts":"27","/home/tailz/rpg-sheet-react/src/rulesets/5e/class/Cleric.ts":"28","/home/tailz/rpg-sheet-react/src/App.tsx":"29","/home/tailz/rpg-sheet-react/src/data/CharacterService.ts":"30","/home/tailz/rpg-sheet-react/src/rulesets/5e/CharacterList.tsx":"31","/home/tailz/rpg-sheet-react/src/AppHeader.tsx":"32"},{"size":500,"mtime":1617426598050,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1609204163000,"results":"35","hashOfConfig":"34"},{"size":4062,"mtime":1617422202110,"results":"36","hashOfConfig":"34"},{"size":2458,"mtime":1617419063000,"results":"37","hashOfConfig":"34"},{"size":301,"mtime":1609204164000,"results":"38","hashOfConfig":"34"},{"size":1101,"mtime":1609204163000,"results":"39","hashOfConfig":"34"},{"size":2152,"mtime":1609204163000,"results":"40","hashOfConfig":"34"},{"size":454,"mtime":1609204164000,"results":"41","hashOfConfig":"34"},{"size":863,"mtime":1609204163000,"results":"42","hashOfConfig":"34"},{"size":599,"mtime":1609204164000,"results":"43","hashOfConfig":"34"},{"size":5280,"mtime":1609204164000,"results":"44","hashOfConfig":"34"},{"size":1806,"mtime":1609204164000,"results":"45","hashOfConfig":"34"},{"size":673,"mtime":1617419063000,"results":"46","hashOfConfig":"34"},{"size":1800,"mtime":1617419063000,"results":"47","hashOfConfig":"34"},{"size":1411,"mtime":1617419063000,"results":"48","hashOfConfig":"34"},{"size":228,"mtime":1609204164000,"results":"49","hashOfConfig":"34"},{"size":531,"mtime":1609204164000,"results":"50","hashOfConfig":"34"},{"size":2898,"mtime":1609204163000,"results":"51","hashOfConfig":"34"},{"size":677,"mtime":1609204164000,"results":"52","hashOfConfig":"34"},{"size":988,"mtime":1609204163000,"results":"53","hashOfConfig":"34"},{"size":884,"mtime":1609204163000,"results":"54","hashOfConfig":"34"},{"size":276,"mtime":1609204164000,"results":"55","hashOfConfig":"34"},{"size":2324,"mtime":1617419063000,"results":"56","hashOfConfig":"34"},{"size":1203,"mtime":1617417346000,"results":"57","hashOfConfig":"34"},{"size":2150,"mtime":1609204163000,"results":"58","hashOfConfig":"34"},{"size":700,"mtime":1609204163000,"results":"59","hashOfConfig":"34"},{"size":2119,"mtime":1617417346000,"results":"60","hashOfConfig":"34"},{"size":529,"mtime":1617419063000,"results":"61","hashOfConfig":"34"},{"size":1360,"mtime":1617428468040,"results":"62","hashOfConfig":"34"},{"size":1050,"mtime":1617423571860,"results":"63","hashOfConfig":"34"},{"size":1925,"mtime":1617428367220,"results":"64","hashOfConfig":"34"},{"size":790,"mtime":1617426987670,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1gxri0d",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"77"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"77"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/tailz/rpg-sheet-react/src/index.js",[],["148","149"],"/home/tailz/rpg-sheet-react/src/reportWebVitals.js",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/CharacterSheet.tsx",["150","151"],"import { Random } from 'random-js';\nimport React from 'react';\nimport { Divider, Dropdown, Grid, Header, Menu, Placeholder } from 'semantic-ui-react';\nimport { Character } from '../Character';\nimport { Esh } from '../example/Esh';\nimport { SheetAbilities } from './SheetAbilities';\nimport { SheetHeader } from './SheetHeader';\nimport { SheetInspiration } from './SheetInspiration';\nimport { SheetOtherProficiencies } from './SheetOtherProficiencies';\nimport { SheetPerception } from './SheetPerception';\nimport { SheetProficiency } from './SheetProficiency';\nimport { SheetSkills } from './SheetSkills';\nimport { SheetStatuses } from './SheetStatuses';\n\ntype Props = { id: string };\n\ntype State = {\n    loading: boolean;\n    character: Character;\n    rng: Random;\n};\n\nclass CharacterSheet extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            loading: false,\n            character: new Esh(),\n            rng: new Random()\n        };\n    }\n\n    componentDidMount() {\n        // CharacterService.getCharacter(this.props.uuid)\n        //   .then((res) => res.json())\n        //   .then((char: Character) => {\n        //     this.setState({ character: char }, () => {\n        //       this.setState({ loading: false });\n        //     });\n        //   });\n    }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.character == null ? (\n                        <Placeholder></Placeholder>\n                    ) : (\n                            <Grid>\n                                <Grid.Row columns={1}>\n                                    <Menu fluid>\n                                        <Menu.Item header name='RPGSheet'></Menu.Item>\n                                        <Menu.Item position=\"right\" disabled fitted></Menu.Item>\n                                        <Dropdown item icon='sliders horizontal' direction=\"left\">\n                                            <Dropdown.Menu>\n                                                <Dropdown.Item>\n                                                    Back to Character Selection\n                                            </Dropdown.Item>\n                                                <Dropdown.Item>\n                                                    Save\n                                            </Dropdown.Item>\n                                                <Dropdown.Item>\n                                                    Delete\n                                            </Dropdown.Item>\n                                            </Dropdown.Menu>\n                                        </Dropdown>\n                                    </Menu>\n                                </Grid.Row>\n                                <SheetHeader {...this.state}></SheetHeader>\n                                <Grid.Row columns={3}>\n                                    <Grid.Column>\n                                        <SheetAbilities {...this.state}></SheetAbilities>\n                                        <SheetPerception {...this.state}></SheetPerception>\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <SheetInspiration {...this.state}></SheetInspiration>\n                                        <SheetProficiency {...this.state}></SheetProficiency>\n                                        <SheetStatuses {...this.state}></SheetStatuses>\n                                    </Grid.Column>\n                                    <Grid.Column>\n                                        <SheetSkills {...this.state}></SheetSkills>\n                                    </Grid.Column>\n                                    <SheetOtherProficiencies {...this.state}></SheetOtherProficiencies>\n                                </Grid.Row>\n                            </Grid>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nexport default CharacterSheet;\n",["152","153"],"/home/tailz/rpg-sheet-react/src/rulesets/5e/example/Yevgeni.ts",[],["154","155"],"/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetOtherProficiencies.tsx",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetAbilities.tsx",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetHeader.tsx",["156","157","158"],"import React from 'react';\nimport { BreadcrumbDivider, Grid, Item, Label, Segment } from 'semantic-ui-react';\nimport { Character } from '../Character';\n\ntype Props = { character: Character };\n\ntype State = {\n    character: Character;\n};\n\nexport class SheetHeader extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { character: props.character };\n    }\n    render() {\n        return (\n                <Grid.Row verticalAlign=\"middle\" columns={2}>\n                    <Grid.Column width={6}>\n                        <Segment>\n                        <h1>{this.state.character.bio.name}</h1>\n                        </Segment>\n                    </Grid.Column>\n                    <Grid.Column width={10}>\n                        <Segment>\n                            <Grid divided>\n                                {[\n                                    [\"Class\", this.state.character.bio.class.name],\n                                    [\"Level\",this.state.character.level],\n                                    [\"Background\", this.state.character.bio.background],\n                                ].map((e,i) => (\n                                    <Grid.Column key={i} width={5}><strong>{e[1]}</strong><br /><small>{e[0]}</small></Grid.Column>\n                                ))}\n                            </Grid>\n                        </Segment>\n                        <Segment>\n                            <Grid divided>\n                                {[\n                                    [\"Race\", this.state.character.bio.race.name],\n                                    [\"Alignment\", this.state.character.bio.alignment.toLocaleString()],\n                                    [\"xp\", this.state.character.xp],\n                                ].map((e,i) => (\n                                    <Grid.Column key={i} width={5}><strong>{e[1]}</strong><br /><small>{e[0]}</small></Grid.Column>\n                                ))}\n                            </Grid>\n                        </Segment>\n                    </Grid.Column>\n                </Grid.Row>\n        );\n    }\n}\n","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetPerception.tsx",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetInspiration.tsx",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetProficiency.tsx",["159","160","161"],"import React from 'react';\nimport { Button, Icon, Item, Segment } from 'semantic-ui-react';\nimport { Character } from '../Character';\n\ntype Props = {\n    character: Character;\n};\n\ntype State = {\n    value: number;\n};\n\nexport class SheetProficiency extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = { value: props.character.proficiency };\n    }\n\n    render() {\n        return (\n            <Segment raised>\n                +{this.state.value}\n                <br/>\n                Proficiency\n            </Segment>\n        );\n    }\n}\n","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetSkills.tsx",["162","163"],"import React from 'react';\nimport { Icon, Input, List, Segment } from 'semantic-ui-react';\nimport { Abilities, Ability, AbilityType } from '../Abilities';\nimport { Character } from '../Character';\nimport { Skill, Skills } from '../skills/Skills';\n\ntype Props = {\n    character: Character;\n};\n\ntype State = {\n    search?: string;\n    throws: Set<AbilityType>;\n    skills: Set<Skill>;\n};\n\nexport class SheetSkills extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        if (props.character.bio != null)\n            this.state = {\n                throws: new Set(Object.keys(props.character.abilities) as AbilityType[]),\n                skills: new Set(Array.from(props.character.proficiencies.skills).concat(Skills)),\n            };\n    }\n\n    isProficientInThrow = (ability: AbilityType) => {\n        return this.props.character.proficiencies.throws.has(ability);\n    };\n\n    isProficientInSkill = (skill: Skill) => {\n        return Array.from(this.props.character.proficiencies.skills).some(\n            (s) => s.name === skill.name\n        );\n    };\n\n    search = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        const query = event.currentTarget.value;\n        if (query != '')\n            this.setState({\n                throws: new Set(\n                    (\n                        (Object.entries(this.props.character.abilities) as unknown) as [\n                            AbilityType,\n                            Ability\n                        ][]\n                    )\n                        .filter((t) => t[1].name.toLowerCase().startsWith(query.toLowerCase()))\n                        .map((t) => t[0])\n                ),\n                skills: new Set(\n                    Array.from(this.props.character.proficiencies.skills).concat(Skills).filter((a) => a.name.toLowerCase().startsWith(query.toLowerCase()))\n                ),\n            });\n        else if (this.props.character.bio != null)\n            this.setState(\n                {\n                    throws: new Set(Object.keys(this.props.character.abilities) as AbilityType[]),\n                    skills: new Set(Array.from(this.props.character.proficiencies.skills).concat(Skills)),\n                }\n            );\n    }\n\n    render() {\n        return (\n            <Segment raised>\n                <h2>Throws and Skills</h2>\n                <Input icon>\n                    <input onKeyUp={this.search} type=\"text\" placeholder=\"Search...\"></input>\n                    <Icon name=\"search\"></Icon>\n                </Input>\n                <h3>Saving Throws</h3>\n                <List ordered={false}>\n                    {\n                        (Object.entries(this.props.character.abilities) as unknown as [\n                            AbilityType,\n                            Ability\n                        ][])\n                        .filter(a => this.state.throws.has(a[0]))\n                        .map((a) => (\n                            <Segment key={a[0]} raised={this.isProficientInThrow(a[0])}>\n                                <Icon\n                                    name={\n                                        this.isProficientInThrow(a[0])\n                                            ? 'check circle'\n                                            : 'circle outline'\n                                    }\n                                ></Icon>\n                                {a[1].name}\n                                <br />\n                                (&nbsp;\n                                {this.isProficientInThrow(a[0]) ?\n                                    a[1].score.modifier + \" \" + a[0] + \" + \" + this.props.character.proficiency + \" prof. )\"\n                                    :\n                                    a[1].score.modifier + \" \" + a[0] + \" )\"\n                                }\n                            </Segment>\n                        ))\n                    }\n                </List>\n                <h3>Skills</h3>\n                <List ordered={false}>\n                    {Array.from(this.state.skills).map((skill) => (\n                        <Segment key={skill.name} raised={this.isProficientInSkill(skill)}>\n                            <Icon\n                                name={\n                                    this.isProficientInSkill(skill)\n                                        ? 'check circle'\n                                        : 'circle outline'\n                                }\n                            ></Icon>\n                            {skill.name}\n                            <br />\n                            <span color=\"grey\">\n                                ( {this.props.character.abilities[skill.ability].score.modifier}{' '}\n                                {skill.ability}\n                                {this.isProficientInSkill(skill)\n                                    ? ' + '\n                                          .concat(this.props.character.proficiency.toString())\n                                          .concat(' prof. )')\n                                    : ' )'}\n                            </span>\n                        </Segment>\n                    ))}\n                </List>\n            </Segment>\n        );\n    }\n}\n","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetStatuses.tsx",["164"],"import { Random } from \"random-js\";\nimport React from \"react\";\nimport { Grid, Segment } from \"semantic-ui-react\";\nimport { Character } from \"../Character\";\nimport { SheetArmor } from \"./SheetArmor\";\nimport { SheetDeathSaves } from \"./SheetDeathSaves\";\nimport { SheetHealth } from \"./SheetHealth\";\nimport { SheetHitDice } from \"./SheetHitDice\";\nimport { SheetInitiative } from \"./SheetInitiative\";\nimport { SheetSpeed } from \"./SheetSpeed\";\n\ntype Props = {\n    character: Character\n};\n\nexport class SheetStatuses extends React.Component<Props> {\n    \n    private rng = new Random();\n    \n    constructor(props: Props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <Segment raised>\n                <Grid>\n                    <Grid.Row columns={3} verticalAlign=\"middle\">\n                        <Grid.Column stretched>\n                            <SheetArmor {...this.props}></SheetArmor>\n                        </Grid.Column>\n                        <Grid.Column stretched><SheetInitiative {...this.props} rng={this.rng}></SheetInitiative></Grid.Column>\n                        <Grid.Column stretched><SheetSpeed {...this.props}></SheetSpeed></Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={1}>\n                        <Grid.Column>\n                            <SheetHealth {...this.props}></SheetHealth>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={2} stretched>\n                      <Grid.Column><SheetHitDice {...this.props}></SheetHitDice></Grid.Column>\n                      <Grid.Column><SheetDeathSaves {...this.props} rng={this.rng}></SheetDeathSaves></Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Segment>\n        )\n    }\n}","/home/tailz/rpg-sheet-react/src/rulesets/5e/CharacterBio.interface.ts",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/Character.ts",["165"],"import { Random } from 'random-js';\nimport { uuid58 } from 'uuid-base58';\nimport { Abilities, Ability, AbilityType } from './Abilities';\nimport { CharacterBio } from './CharacterBio.interface';\nimport { Armor } from './equipment/armor/Armor.types';\nimport { RangedWeapon, Weapon, WeaponType } from './equipment/weapons/Weapon.types';\n\nexport type Proficiencies = {\n    weapon: Set<WeaponType>;\n    throws: Set<AbilityType>;\n    skills: Set<any>;\n};\n\nexport class Character {\n    id: string = uuid58();\n    rng = new Random();\n\n    inspiration: boolean = false;\n\n    bio: CharacterBio;\n\n    BASE_AC = 10;\n    level: number;\n\n    abilities: Abilities;\n    languages: string[] = [];\n    inventory?: any[];\n    combat?: {\n        armor?: Armor;\n        ranged?: RangedWeapon;\n        melee?: Weapon;\n        shield?: Armor;\n    };\n    currency = {\n        pp: 0,\n        gp: 0,\n        sp: 0,\n        cp: 0,\n    };\n    hitDice = {\n        number: 0,\n        type: 6,\n    };\n    xp: number;\n    proficiency: number;\n\n    constructor(bio: CharacterBio, abilities: Abilities, public proficiencies: Proficiencies) {\n        this.bio = bio;\n        this.level = 0;\n        this.xp = 0;\n        this.inspiration = false;\n        this.abilities = abilities;\n        this.proficiency = 2;\n    }\n\n    get initiative(): number {\n        return this.rng.die(20) + this.abilities.dex.score.modifier;\n    }\n\n    get ac(): number {\n        // TODO: Equipped armor rating, qualities.\n        if (this.combat?.shield != null || this.combat?.armor != null) {\n            return (this.combat?.shield?.ac || 0) + (this.combat?.armor?.ac || 0);\n        } else {\n            return this.BASE_AC + this.abilities.dex.score.modifier;\n        }\n    }\n\n    equals(other: Character) {\n        return this.id === other.id;\n    }\n}\n","/home/tailz/rpg-sheet-react/src/rulesets/5e/skills/Skills.ts",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/race/Human.ts",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/class/Ranger.ts",["166"],"import { Ability, AbilityType } from \"../Abilities\";\nimport { WeaponType } from \"../equipment/weapons/Weapon.types\";\nimport { Class } from \"./Class.interface\";\n\nexport class Ranger implements Class {\n    name = \"Ranger\"\n    levelTable: string[] = [];\n    proficiencyBonus = 2;\n    hp= { dice: { number: 3, type: 10 }, first: 1 };\n    proficiencies = {\n        weapon: new Set<WeaponType>([\"simple\", \"marital\"]),\n        throws: new Set<AbilityType>([\"str\", \"dex\"]),\n        skills: new Set<any>()\n    };\n    spells: unknown;\n    \n}","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetAbility.tsx",["167"],"import { Random } from 'random-js';\nimport React from 'react';\nimport { Button, Card, Icon, Label, Loader, Transition } from 'semantic-ui-react';\nimport { Ability } from '../Abilities';\n\ntype Props = {\n    ability: Ability;\n    rng: Random\n};\n\ntype State = {\n    modifier: number;\n    roll: number;\n    rolling: boolean;\n};\n\nexport class SheetAbility extends React.Component<Props, State> {\n    \n    private delay = 500;\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            modifier: this.props.ability.score.modifier,\n            roll: 0,\n            rolling: false\n        };\n    }\n\n    getModifierColor = () => {\n        const mod = this.props.ability.score.modifier;\n        if (mod > 0) {\n            return 'positive';\n        } else if (mod < 0) {\n            return 'negative';\n        } else {\n            return 'primary';\n        }\n    }\n\n    getModifierText = () => {\n        return this.state.modifier > 0\n            ? '+'.concat(this.state.modifier.toString())\n            : this.state.modifier.toString();\n    }\n\n    rollModifier = () => {\n        const roll = this.props.rng.dice(20, 1)[0] + this.state.modifier;\n        this.setState({roll});\n    }\n    \n    resetRoll = () => {\n        this.setState({roll: 0});\n    }\n\n    render() {\n        return (\n            <Card centered>\n                <Card.Content>\n                    <Card.Header>{this.props.ability.name}</Card.Header>\n                    <Card.Description>\n                        <strong>{this.props.ability.score.score}</strong>\n                        &nbsp;→&nbsp;\n                        <span color={this.getModifierColor()}>\n                            {this.getModifierText()}\n                        </span>\n                    </Card.Description>\n                    <Card.Content extra>\n                        <Button icon=\"cube\" content=\"Roll\" size=\"medium\" disabled={!!this.state.roll} onClick={this.rollModifier}>\n                        </Button>\n                        <Transition visible={!!this.state.roll} animation='fade right' duration={this.delay}>\n                                <Label attached=\"bottom right\" active onClick={this.resetRoll} size=\"large\">\n                                    <div title=\"Reset\" style={{cursor: \"pointer\"}}>\n                                        <span style={{paddingRight: \".5em\"}}>\n                                            {this.state.roll ? this.state.roll.toString().concat(` (${this.state.roll - this.state.modifier} + ${this.state.modifier})`) : '-'}\n                                        </span>\n                                        <Icon name='undo' size=\"small\"></Icon>\n                                    </div>\n                                </Label>\n                        </Transition>\n                    </Card.Content>\n                </Card.Content>\n            </Card>\n        );\n    }\n}\n","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetSpeed.tsx",["168","169","170"],"import { Random } from \"random-js\";\nimport React from \"react\";\nimport { Button, Icon, Segment } from \"semantic-ui-react\";\nimport { Character } from \"../Character\";\n\ntype Props = {\n    character: Character\n};\n\nexport class SheetSpeed extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <Segment compact raised>\n                <Icon size=\"large\" name=\"bicycle\"></Icon>\n                <br />\n                <big>\n                    30ft\n                </big>\n                <br />\n                <small>Movement</small>\n                <br />\n            </Segment>\n        )\n    }\n}","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetInitiative.tsx",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetHitDice.tsx",["171"],"import { Random } from \"random-js\";\nimport React from \"react\";\nimport { Button, Icon, Segment } from \"semantic-ui-react\";\nimport { Character } from \"../Character\";\n\ntype Props = {\n    character: Character\n};\n\ntype State = {\n    dice: number\n}\n\nexport class SheetHitDice extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            dice: props.character.hitDice.number\n        }\n    }\n    \n    render() {\n        return (\n            <Segment raised>\n                <Icon size=\"large\" name=\"medkit\"></Icon>\n                <br />\n                <big>\n                    {this.state.dice}\n                </big>\n                <small> Hit Dice</small>\n                <br />\n                <Button icon=\"cube\" content=\"Roll\">\n                    \n                </Button>\n            </Segment>\n        )\n    }\n}","/home/tailz/rpg-sheet-react/src/rulesets/5e/race/Race.interface.ts",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/Abilities.ts",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetHealth.tsx",["172"],"import { Random } from \"random-js\";\nimport React from \"react\";\nimport { Button, Icon, Segment } from \"semantic-ui-react\";\nimport { Character } from \"../Character\";\n\ntype Props = {\n    character: Character\n};\n\ntype State = {\n    current: number,\n    max: number\n};\n\nexport class SheetHealth extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            max: 30,\n            current: 30\n        }\n    }\n    \n    increment = () => {\n        this.setState({current: this.state.current + 1});\n    }\n    \n    decrement = () => {\n        this.setState({current: this.state.current - 1});\n    }\n    \n    render() {\n        return (\n            <Segment raised>\n                <Icon size=\"large\" name=\"heart\"></Icon>\n                <br />\n                <Button icon=\"minus\" disabled={this.state.current === 0} onClick={this.decrement}></Button>\n                <big>\n                    {this.state.current}/{this.state.max}\n                </big>\n                <small style={{padding: \"2px\"}}>HP</small>\n                <Button icon=\"plus\" onClick={this.increment}></Button>\n                <br />\n            </Segment>\n        )\n    }\n}","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetDeathSaves.tsx",["173"],"import { Random } from \"random-js\";\nimport React from \"react\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\nimport { Character } from \"../Character\";\n\ntype Props = {\n    character: Character,\n    rng: Random\n};\n\ntype State = {\n    roll: number,\n    death: number,\n    life: number\n}\n\nexport class SheetDeathSaves extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            death: 0,\n            life: 0,\n            roll: 0\n        }\n    }\n    \n    roll = () => {\n        const roll = this.props.rng.die(20);\n        if (roll === 1) {\n            this.setState({death: this.state.death + 2});\n        } else if (roll < 10) {\n            this.setState({death: this.state.death + 1});\n        } else if (roll >= 10) {\n            this.setState({life: this.state.life + 1})\n        } else if (roll === 20) {\n            this.reset();\n        }\n        this.setState({roll});\n    }\n    \n    reset = () => {\n        this.setState({life: 0, death: 0});\n    }\n    \n    render() {\n        return (\n            <Segment raised>\n                <Icon size=\"large\" name=\"heartbeat\"></Icon>\n                <br />\n                {new Array(3).fill(true).map((_, i) => {\n                    return (\n                        i >= this.state.life ?\n                        <Icon name=\"square outline\"></Icon> :\n                        <Icon name=\"check square\"></Icon>\n                    );\n                })}\n                <Icon name=\"medkit\"></Icon>\n                <small> Live</small>\n                <br />\n                {new Array(3).fill(true).map((_, i) => {\n                    return (\n                        i >= this.state.death ?\n                        <Icon name=\"square outline\"></Icon> :\n                        <Icon name=\"check square\"></Icon>\n                    );\n                })}\n                <Icon name=\"bomb\"></Icon>\n                <small> Die</small>\n                <br />\n                <Button icon=\"cube\" onClick={this.roll} content=\"Roll\">\n                    \n                </Button>\n            </Segment>\n        )\n    }\n}","/home/tailz/rpg-sheet-react/src/rulesets/5e/character-sheet/SheetArmor.tsx",["174","175","176"],"import { Random } from \"random-js\";\nimport React from \"react\";\nimport { Button, Icon, Segment } from \"semantic-ui-react\";\nimport { Character } from \"../Character\";\n\ntype Props = {\n    character: Character\n};\n\nexport class SheetArmor extends React.Component<Props> {\n    constructor(props: Props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <Segment compact raised>\n                <Icon size=\"large\" name=\"shield\"></Icon>\n                <br />\n                <big>\n                    {this.props.character.ac}\n                </big>\n                <br />\n                <small>Armor Class</small>\n                <br />\n            </Segment>\n        )\n    }\n}","/home/tailz/rpg-sheet-react/src/rulesets/5e/example/Esh.ts",["177"],"import { Random } from 'random-js';\nimport { uuid58 } from 'uuid-base58';\nimport { Abilities, ABILITIES, AbilityType } from '../Abilities';\nimport { Character, Proficiencies } from '../Character';\nimport { Alignment, CharacterBio } from '../CharacterBio.interface';\nimport { Cleric } from '../class/Cleric';\nimport { Armor } from '../equipment/armor/Armor.types';\nimport { RangedWeapon, WeaponType } from '../equipment/weapons/Weapon.types';\nimport { human } from '../race/Human';\nimport { AnimalHandling, Skill, Stealth, Survival } from '../skills/Skills';\n\nconst bio: CharacterBio = {\n    id: uuid58(),\n    name: 'Esh',\n    class: new Cleric(),\n    race: human,\n    age: 250,\n    sex: 'M',\n    height: 65,\n    weight: 300,\n    background: 'Acolyte',\n    alignment: Alignment.LAWFUL_GOOD,\n};\n\nconst abilities: Abilities = Array.from(ABILITIES.entries()).reduce((a, c) => {\n    a[c[0]] = c[1];\n    switch (c[0]) {\n        case 'str':\n            a[c[0]].score.score = 14;\n            break;\n        case 'dex':\n            a[c[0]].score.score = 12;\n            break;\n        case 'con':\n            a[c[0]].score.score = 15;\n            break;\n        case 'int':\n            a[c[0]].score.score = 8;\n            break;\n        case 'wis':\n            a[c[0]].score.score = 18;\n            break;\n        case 'cha':\n            a[c[0]].score.score = 10;\n            break;\n    }\n    return a;\n}, {} as Abilities);\n\nconst proficiencies: Proficiencies = {\n    weapon: new Set<WeaponType>(['simple', 'marital']),\n    throws: new Set<AbilityType>(['wis', 'cha']),\n    skills: new Set<Skill>([AnimalHandling, Stealth, Survival]),\n};\n\nexport class Esh extends Character {\n    rng = new Random();\n    inspiration = true;\n    level = 4;\n    languages = ['Common', 'Orcish', 'Dwarvish', 'Elvish'];\n    combat = {\n        armor: {\n            name: 'Scale Mail',\n            ac: 14,\n            notes: '',\n        } as Armor,\n    };\n    currency = { pp: 0, gp: 95, sp: 8, cp: 0 };\n    hitDice = { number: 4, type: 8 };\n    xp = 0;\n    proficiency = 2;\n\n    constructor() {\n        super(bio, abilities, proficiencies);\n    }\n}\n","/home/tailz/rpg-sheet-react/src/rulesets/5e/class/Cleric.ts",["178"],"import { Ability, AbilityType } from '../Abilities';\nimport { WeaponType } from '../equipment/weapons/Weapon.types';\nimport { Class } from './Class.interface';\n\nexport class Cleric implements Class {\n    name = 'Cleric';\n    levelTable: string[] = [];\n    proficiencyBonus = 2;\n    hp = { dice: { number: 3, type: 8 }, first: 1 };\n    proficiencies = {\n        weapon: new Set<WeaponType>(['simple', 'marital']),\n        throws: new Set<AbilityType>(['wis', 'cha']),\n        skills: new Set<any>(),\n    };\n    spells: unknown;\n}\n","/home/tailz/rpg-sheet-react/src/App.tsx",["179","180"],"/home/tailz/rpg-sheet-react/src/data/CharacterService.ts",[],"/home/tailz/rpg-sheet-react/src/rulesets/5e/CharacterList.tsx",[],"/home/tailz/rpg-sheet-react/src/AppHeader.tsx",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":17},{"ruleId":"185","severity":1,"message":"189","line":3,"column":35,"nodeType":"187","messageId":"188","endLine":3,"endColumn":41},{"ruleId":"181","replacedBy":"190"},{"ruleId":"183","replacedBy":"191"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"192","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":27},{"ruleId":"185","severity":1,"message":"193","line":2,"column":35,"nodeType":"187","messageId":"188","endLine":2,"endColumn":39},{"ruleId":"185","severity":1,"message":"194","line":2,"column":41,"nodeType":"187","messageId":"188","endLine":2,"endColumn":46},{"ruleId":"185","severity":1,"message":"195","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":16},{"ruleId":"185","severity":1,"message":"196","line":2,"column":18,"nodeType":"187","messageId":"188","endLine":2,"endColumn":22},{"ruleId":"185","severity":1,"message":"193","line":2,"column":24,"nodeType":"187","messageId":"188","endLine":2,"endColumn":28},{"ruleId":"185","severity":1,"message":"197","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":19},{"ruleId":"198","severity":1,"message":"199","line":39,"column":19,"nodeType":"200","messageId":"201","endLine":39,"endColumn":21},{"ruleId":"202","severity":1,"message":"203","line":20,"column":5,"nodeType":"204","messageId":"205","endLine":22,"endColumn":6},{"ruleId":"185","severity":1,"message":"206","line":3,"column":21,"nodeType":"187","messageId":"188","endLine":3,"endColumn":28},{"ruleId":"185","severity":1,"message":"206","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":17},{"ruleId":"185","severity":1,"message":"207","line":3,"column":37,"nodeType":"187","messageId":"188","endLine":3,"endColumn":43},{"ruleId":"185","severity":1,"message":"208","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":16},{"ruleId":"185","severity":1,"message":"195","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":11,"column":5,"nodeType":"204","messageId":"205","endLine":13,"endColumn":6},{"ruleId":"185","severity":1,"message":"208","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":16},{"ruleId":"185","severity":1,"message":"208","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":16},{"ruleId":"185","severity":1,"message":"189","line":3,"column":18,"nodeType":"187","messageId":"188","endLine":3,"endColumn":24},{"ruleId":"185","severity":1,"message":"208","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":16},{"ruleId":"185","severity":1,"message":"195","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":11,"column":5,"nodeType":"204","messageId":"205","endLine":13,"endColumn":6},{"ruleId":"185","severity":1,"message":"209","line":8,"column":10,"nodeType":"187","messageId":"188","endLine":8,"endColumn":22},{"ruleId":"185","severity":1,"message":"206","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":17},{"ruleId":"185","severity":1,"message":"210","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":12},{"ruleId":"185","severity":1,"message":"211","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":22},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"@typescript-eslint/no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.",["212"],["213"],"'BreadcrumbDivider' is defined but never used.","'Item' is defined but never used.","'Label' is defined but never used.","'Button' is defined but never used.","'Icon' is defined but never used.","'Abilities' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Ability' is defined but never used.","'Loader' is defined but never used.","'Random' is defined but never used.","'RangedWeapon' is defined but never used.","'logo' is defined but never used.","'CharacterSheet' is defined but never used.","no-global-assign","no-unsafe-negation"]